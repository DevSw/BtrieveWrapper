namespace {% Namespace %}
{
	public class {% DisplayName %}DbClient : BtrieveWrapper.Orm.DbClient
    {
        public {% DisplayName %}DbClient(string applicationId = "BW", string dllPath = {% if DllPath %}@"{% DllPath %}"{% else %}null{% endif %}, System.Collections.Generic.IEnumerable<string> dependencyPaths = {% DisplayDependencyPaths %})
            : base(applicationId, dllPath, dependencyPaths) { }

        public {% DisplayName %}DbClient(BtrieveWrapper.INativeLibrary nativeLibrary, string applicationId = "BW")
            : base(nativeLibrary, applicationId) { }{% for record in Records %}

        /// <summary>
{% if record.CommentLines %}{% for line in record.CommentLines %}        /// {% line %}
{% endfor %}{% else %}        /// 
{% endif %}        /// </summary>
        public BtrieveWrapper.Orm.RecordManager<{% record.DisplayName %}, {% record.DisplayName %}KeyCollection> {% record.DisplayName %}(BtrieveWrapper.Orm.Path path = null, string ownerName = null, BtrieveWrapper.OpenMode? openMode = null, int recycleCount = 1000, int temporaryBufferId = 0) {
            return (BtrieveWrapper.Orm.RecordManager<{% record.DisplayName %}, {% record.DisplayName %}KeyCollection>)this.CreateManager<{% record.DisplayName %}, {% record.DisplayName %}KeyCollection>(path, ownerName, openMode, recycleCount, temporaryBufferId);
        }

        /// <summary>
{% if record.CommentLines %}{% for line in record.CommentLines %}        /// {% line %}
{% endfor %}{% else %}        /// 
{% endif %}        /// </summary>
        public BtrieveWrapper.Orm.RecordManager<{% record.DisplayName %}, {% record.DisplayName %}KeyCollection> {% record.DisplayName %}(string path, string ownerName = null, BtrieveWrapper.OpenMode? openMode = null, int recycleCount = 1000, int temporaryBufferId = 0) {
            return (BtrieveWrapper.Orm.RecordManager<{% record.DisplayName %}, {% record.DisplayName %}KeyCollection>)this.CreateManager<{% record.DisplayName %}, {% record.DisplayName %}KeyCollection>(path, ownerName, openMode, recycleCount, temporaryBufferId);
        }{% endfor %}
    }
}